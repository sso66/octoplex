# cube.coffee

cube = (num) -> Math.pow num, 3
list = [1, 2, 3, 4, 5, 6]
cubeList = (cube num for num in list)

console.log index + ": " + num for index, num of cubeList
//--------------------------------------------------------
// Generated by CoffeeScript 2.3.0 -> JavaScript (es5)
(function() {
  // cube.coffee
  var cube, cubeList, index, list, num;

  cube = function(num) {
    return Math.pow(num, 3);
  };

  list = [1, 2, 3, 4, 5, 6];

  cubeList = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = list.length; i < len; i++) {
      num = list[i];
      results.push(cube(num));
    }
    return results;
  })();

  for (index in cubeList) {
    num = cubeList[index];
    console.log(index + ": " + num);
  }

}).call(this);
//--------------------------------------------------------
// decaffienate cube.coffee -> cube.js - JavaScript (es6)
/*
 * decaffeinate suggestions:
 * DS101: Remove unnecessary use of Array.from
 * DS205: Consider reworking code to avoid use of IIFEs
 * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md
 */
// cube.coffee

let num;
const cube = num => Math.pow(num, 3);
const list = [1, 2, 3, 4, 5, 6];
const cubeList = ((() => {
  const result = [];
  for (num of Array.from(list)) {     result.push(cube(num));
  }
  return result;
})());

for (let index in cubeList) { num = cubeList[index]; console.log(index + ": " + num); }
/*

$ node cube.es6
0: 1
1: 8
2: 27
3: 64
4: 125
5: 216

*/
  
 
 */
